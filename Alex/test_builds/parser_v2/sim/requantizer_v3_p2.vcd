$date
	Sun Dec 11 14:52:14 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module requantizer_tb $end
$var wire 1 ! dout_v $end
$var wire 32 " dout [31:0] $end
$var reg 9 # big_values [8:0] $end
$var reg 2 $ block_type [1:0] $end
$var reg 1 % clk $end
$var reg 1 & din_valid $end
$var reg 8 ' global_gain [7:0] $end
$var reg 10 ( is_pos [9:0] $end
$var reg 1 ) mixed_block_flag $end
$var reg 1 * preflag $end
$var reg 1 + rst $end
$var reg 84 , scalefac_l_in [83:0] $end
$var reg 144 - scalefac_s_in [143:0] $end
$var reg 1 . scalefac_scale $end
$var reg 9 / subblock_gain [8:0] $end
$var reg 1 0 window_switching_flag $end
$var reg 16 1 x_in [15:0] $end
$scope module shit $end
$var wire 9 2 big_values_in [8:0] $end
$var wire 2 3 block_type_in [1:0] $end
$var wire 1 % clk $end
$var wire 1 & din_v $end
$var wire 8 4 global_gain_in [7:0] $end
$var wire 10 5 is_pos [9:0] $end
$var wire 1 ) mixed_block_flag_in $end
$var wire 1 * preflag_in $end
$var wire 1 + rst $end
$var wire 84 6 scalefac_l_in [83:0] $end
$var wire 144 7 scalefac_s_in [143:0] $end
$var wire 1 . scalefac_scale_in $end
$var wire 9 8 subblock_gain_in [8:0] $end
$var wire 1 0 window_switching_flag_in $end
$var wire 16 9 x_in [15:0] $end
$var wire 4 : x_tab_base [3:0] $end
$var wire 16 ; x_pow_43 [15:0] $end
$var wire 16 < x_in_mask [15:0] $end
$var wire 16 = x_abs [15:0] $end
$var wire 10 > p43_table_input [9:0] $end
$var wire 10 ? count1 [9:0] $end
$var wire 4 @ c3_win [3:0] $end
$var wire 12 A c3_sfb [11:0] $end
$var wire 4 B c3_bt [3:0] $end
$var wire 4 C c2_win [3:0] $end
$var wire 12 D c2_sfb [11:0] $end
$var wire 4 E c2_bt [3:0] $end
$var wire 4 F c1_win [3:0] $end
$var wire 12 G c1_sfb [11:0] $end
$var wire 4 H c1_bt [3:0] $end
$var reg 27 I big_values_pipe [26:0] $end
$var reg 6 J block_type_pipe [5:0] $end
$var reg 2 K bt [1:0] $end
$var reg 3 L din_v_pipe [2:0] $end
$var reg 32 M dout [31:0] $end
$var reg 1 ! dout_v $end
$var reg 10 N exp1 [9:0] $end
$var reg 12 O exp2 [11:0] $end
$var reg 24 P global_gain_pipe [23:0] $end
$var reg 30 Q is_pos_pipe [29:0] $end
$var reg 3 R mixed_block_flag_pipe [2:0] $end
$var reg 3 S preflag_pipe [2:0] $end
$var reg 3 T pretab [2:0] $end
$var reg 32 U q2_30 [31:0] $end
$var reg 64 V q32_32 [63:0] $end
$var reg 64 W q4_60_part2 [63:0] $end
$var reg 252 X scalefac_l_pipe [251:0] $end
$var reg 432 Y scalefac_s_pipe [431:0] $end
$var reg 3 Z scalefac_scale_pipe [2:0] $end
$var reg 4 [ scalefac_sel [3:0] $end
$var reg 1 \ scalefac_shift $end
$var reg 12 ] sfb [11:0] $end
$var reg 27 ^ subblock_gain_pipe [26:0] $end
$var reg 3 _ target_subblock_gain [2:0] $end
$var reg 10 ` tmp [9:0] $end
$var reg 3 a win [2:0] $end
$var reg 3 b window_switching_flag_pipe [2:0] $end
$var reg 16 c x_16bit [15:0] $end
$var reg 10 d x_base [9:0] $end
$var reg 10 e x_base_abs [9:0] $end
$var reg 10 f x_base_mask [9:0] $end
$var reg 48 g x_in_pipe [47:0] $end
$var reg 12 h x_quant_base_signed [11:0] $end
$var reg 12 i x_quant_base_signed_mask [11:0] $end
$scope module POW43_TB $end
$var wire 10 j addra [9:0] $end
$var wire 1 % clka $end
$var wire 20 k dina [19:0] $end
$var wire 1 l ena $end
$var wire 1 m regcea $end
$var wire 1 + rsta $end
$var wire 1 n wea $end
$var wire 20 o douta [19:0] $end
$var parameter 152 p INIT_FILE $end
$var parameter 32 q RAM_DEPTH $end
$var parameter 128 r RAM_PERFORMANCE $end
$var parameter 32 s RAM_WIDTH $end
$var reg 20 t ram_data [19:0] $end
$scope function clogb2 $end
$var integer 32 u depth [31:0] $end
$upscope $end
$scope begin output_register $end
$var reg 20 v douta_reg [19:0] $end
$upscope $end
$scope begin use_init_file $end
$upscope $end
$upscope $end
$scope module TB_CASE_1 $end
$var wire 10 w addra [9:0] $end
$var wire 1 % clka $end
$var wire 20 x dina [19:0] $end
$var wire 1 y ena $end
$var wire 1 z regcea $end
$var wire 1 + rsta $end
$var wire 1 { wea $end
$var wire 20 | douta [19:0] $end
$var parameter 208 } INIT_FILE $end
$var parameter 32 ~ RAM_DEPTH $end
$var parameter 128 !" RAM_PERFORMANCE $end
$var parameter 32 "" RAM_WIDTH $end
$var reg 20 #" ram_data [19:0] $end
$scope function clogb2 $end
$var integer 32 $" depth [31:0] $end
$upscope $end
$scope begin output_register $end
$var reg 20 %" douta_reg [19:0] $end
$upscope $end
$scope begin use_init_file $end
$upscope $end
$upscope $end
$scope module TB_CASE_2 $end
$var wire 10 &" addra [9:0] $end
$var wire 1 % clka $end
$var wire 20 '" dina [19:0] $end
$var wire 1 (" ena $end
$var wire 1 )" regcea $end
$var wire 1 + rsta $end
$var wire 1 *" wea $end
$var wire 20 +" douta [19:0] $end
$var parameter 208 ," INIT_FILE $end
$var parameter 32 -" RAM_DEPTH $end
$var parameter 128 ." RAM_PERFORMANCE $end
$var parameter 32 /" RAM_WIDTH $end
$var reg 20 0" ram_data [19:0] $end
$scope function clogb2 $end
$var integer 32 1" depth [31:0] $end
$upscope $end
$scope begin output_register $end
$var reg 20 2" douta_reg [19:0] $end
$upscope $end
$scope begin use_init_file $end
$upscope $end
$upscope $end
$scope module TB_CASE_3 $end
$var wire 10 3" addra [9:0] $end
$var wire 1 % clka $end
$var wire 20 4" dina [19:0] $end
$var wire 1 5" ena $end
$var wire 1 6" regcea $end
$var wire 1 + rsta $end
$var wire 1 7" wea $end
$var wire 20 8" douta [19:0] $end
$var parameter 208 9" INIT_FILE $end
$var parameter 32 :" RAM_DEPTH $end
$var parameter 128 ;" RAM_PERFORMANCE $end
$var parameter 32 <" RAM_WIDTH $end
$var reg 20 =" ram_data [19:0] $end
$scope function clogb2 $end
$var integer 32 >" depth [31:0] $end
$upscope $end
$scope begin output_register $end
$var reg 20 ?" douta_reg [19:0] $end
$upscope $end
$scope begin use_init_file $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b10100 <"
b1001000010010010100011101001000010111110101000001000101010100100100011001001111010100100100110101000001010011100100001101000101 ;"
b1001000000 :"
b110010001100001011101000110000100101111010001100101010101001100010011000101111101010111010010010100111001011111010100110100011001000010010111110101010001000010010111110011001100101110011011010110010101101101 9"
b10100 /"
b1001000010010010100011101001000010111110101000001000101010100100100011001001111010100100100110101000001010011100100001101000101 ."
b1001000000 -"
b110010001100001011101000110000100101111010001100101010101001100010011000101111101010111010010010100111001011111010100110100011001000010010111110101010001000010010111110011001000101110011011010110010101101101 ,"
b10100 ""
b1001000010010010100011101001000010111110101000001000101010100100100011001001111010100100100110101000001010011100100001101000101 !"
b1001000000 ~
b110010001100001011101000110000100101111010001100101010101001100010011000101111101010111010010010100111001011111010100110100011001000010010111110101010001000010010111110011000100101110011011010110010101101101 }
b10100 s
b1001000010010010100011101001000010111110101000001000101010100100100011001001111010100100100110101000001010011100100001101000101 r
b1111101000 q
b1100100011000010111010001100001001011110111000001101111011101110101111100110100001100110101111101110100011000010110001000101110011011010110010101101101 p
$end
#0
$dumpvars
b0 ?"
bx >"
b0 ="
b0 8"
07"
16"
15"
b0 4"
b0 3"
b0 2"
bx 1"
b0 0"
b0 +"
0*"
1)"
1("
b0 '"
b0 &"
b0 %"
bx $"
b0 #"
b0 |
0{
1z
1y
b0 x
b0 w
b0 v
bx u
b0 t
b0 o
0n
1m
1l
b0 k
b0 j
bx i
bx h
bx g
bx f
bx e
bx d
bx c
bx b
b0 a
b0xxxxxxxx `
bx _
bx ^
b0 ]
x\
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
b0 T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx0 K
bx J
bx I
b0 H
b0 G
b0 F
b0 E
b0 D
b0 C
b0 B
b0 A
b0 @
b10001110 ?
b0 >
b0 =
b0 <
b0 ;
b0 :
b0 9
b0 8
b0 7
b0 6
b0 5
b10100110 4
b1 3
b1000111 2
b0 1
10
b0 /
0.
b0 -
b0 ,
0+
0*
0)
b0 (
b10100110 '
0&
0%
b1 $
b1000111 #
bx "
x!
$end
#10000
b1 #"
b1 ="
b11100000000000000000 t
bx0000000000000000 g
bx0 L
bx0000000000 Q
bx000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 Y
bx000000000000000000000000000000000000000000000000000000000000000000000000000000000000 X
bx001000111 I
bx000000000 ^
bx0 S
bx10100110 P
bx0 Z
bx0 R
bx01 J
bx1 b
1%
#20000
0%
1+
#30000
b0 c
b0 O
b1100101110 N
b0 [
b0 K
b0 _
1\
0!
b0 g
b0 L
b0 Q
b0 Y
b0 X
b0 I
b0 ^
b0 S
b0 P
b0 Z
b0 R
b0 J
b0 b
1%
#40000
b11 >
b11 j
b11 =
0%
b11 1
b11 9
1&
0+
#50000
b1 K
b1 H
b1 B
b1110 :
b0 "
b0 M
b0 W
b0 U
b0 V
b1000010 `
b100001010 e
b1111111111 f
b1011110110 d
b0 i
b1011110110 h
b1 |
b1 %"
b1 8"
b1 ?"
b11100000000000000000 o
b11100000000000000000 v
b10110010001010011101 t
b11 g
b1 L
b1000111 I
b10100110 P
b1 J
b1 b
1%
#60000
b10 >
b10 j
b10 =
0%
b1 (
b1 5
b1 w
b1 &"
b1 3"
b10 1
b10 9
#70000
b1000101001110100000000 "
b1000101001110100000000 M
b1000101001110100000000000000000000000000000000000000 W
b1000101001110100000000 U
b100010100111010000000000 V
b10110 `
b1011000 e
b10001010011101 c
b1110101000 d
b1110101000 h
b1111010100 N
1!
b10001010011101 ;
b1011 :
b11 L
b1000111001000111 I
b1010011010100110 P
b101 J
b11 b
b110000000000000010 g
b1 Q
b11000010100001010001 t
b10110010001010011101 o
b10110010001010011101 v
1%
#80000
b0 >
b0 j
b0 =
0%
b10 (
b10 5
b10 w
b10 &"
b10 3"
b0 1
b0 9
#90000
b101000010100010000000 "
b101000010100010000000 M
b101000010100010000000000000000000000000000000000000 W
b101000010100010000000 U
b10100001010001000000000 V
b10111 `
b1011100 e
b10100001010001 c
b1110100100 d
b1110100100 h
b10100001010001 ;
b1100 :
b11000010100001010001 o
b11000010100001010001 v
b11100000000000000000 t
b100000000000000000 g
b10000000010 Q
1%
#100000
b10 >
b10 j
b10 =
b1111111111111111 <
0%
b11 (
b11 5
b11 w
b11 &"
b11 3"
b1111111111111110 1
b1111111111111110 9
#110000
b0 "
b0 M
b0 W
b0 U
b0 V
b11001 `
b1100100 e
b0 c
b1110011100 d
b1110011100 h
b0 ;
b1110 :
b1111111111111110 g
b100000000011 Q
b11000010100001010001 t
b11100000000000000000 o
b11100000000000000000 v
1%
#120000
b100 >
b100 j
b100 =
0%
b100 (
b100 5
b100 w
b100 &"
b100 3"
b1111111111111100 1
b1111111111111100 9
#130000
b11111111111010111101011110000000 "
b11111111111010111101011110000000 M
b1111111111111010111101011110000000000000000000000000000000000000 W
b11111111111010111101011110000000 U
b1111111111111111111111111111111111111111101011110101111000000000 V
b10111 `
b1011100 e
b1101011110101111 c
b1110100100 d
b1110100100 h
b10100001010001 ;
b1100 :
b100000001 #"
b10000 0"
b100000001 ="
b11000010100001010001 o
b11000010100001010001 v
b10110011001011001011 t
b11111111111111101111111111111100 g
b110000000100 Q
1%
#140000
0%
0&
#150000
b11111111110011010011010100000000 "
b11111111110011010011010100000000 M
b1111111111110011010011010100000000000000000000000000000000000000 W
b11111111110011010011010100000000 U
b1111111111111111111111111111111111111111001101001101010000000000 V
b10110 `
b1011000 e
b1100110100110101 c
b1110101000 d
b1110101000 h
b1 ]
b11001011001011 ;
b1011 :
b1 A
b1 C
b1 G
b11111111111111001111111111111100 g
b1000000000100 Q
b10 L
b10110011001011001011 o
b10110011001011001011 v
b100000001 8"
b100000001 ?"
b10000 +"
b10000 2"
b100000001 |
b100000001 %"
1%
#160000
0%
#170000
0!
b0 L
1%
#180000
0%
#190000
1%
#200000
0%
#210000
1%
#220000
0%
#230000
1%
#240000
0%
#250000
1%
#260000
0%
#270000
1%
#280000
0%
#290000
1%
#300000
0%
#310000
1%
#320000
0%
#330000
1%
#340000
0%
